package com.revature.util;

import java.io.FileReader;
import java.io.IOException;
import java.util.Properties;

public class Configuration 
{
	//read the config file and define all the default parameters and instantiate the session factory
	private static final SessionFactory thisSessionFactory = new SessionFactory();
	
	//configuration variables
	private String databaseType="";
	private String databaseDriver="";
	private String databaseURL="";
	private String databaseUser="";
	private String databasePassword="";
	//constructor
	
	
	public Configuration() 
	{
		super();
	}


	public Configuration configure(String filename)
	{
		Properties prop = new Properties();
		try 
		{
			prop.load(new FileReader(filename));
			databaseType = prop.getProperty("databaseType");
			databaseDriver = prop.getProperty("databaseDriver");
			databaseURL = prop.getProperty("databaseURL");
			databaseUser = prop.getProperty("databaseUser");
			databasePassword = prop.getProperty("databasePassword");
		} 
		catch (IOException e) 
		{
			e.printStackTrace();
		}
		
		
		
		
		
		
		return null;
	}

	//getSessionFactory returns the instantiated SessionFactory object
	public SessionFactory getSessionFactory()
	{
		return thisSessionFactory;
	}


	public String getDatabaseType() {
		return databaseType;
	}


	public void setDatabaseType(String databaseType) {
		this.databaseType = databaseType;
	}


	public String getDatabaseDriver() {
		return databaseDriver;
	}


	public void setDatabaseDriver(String databaseDriver) {
		this.databaseDriver = databaseDriver;
	}


	public String getDatabaseURL() {
		return databaseURL;
	}


	public void setDatabaseURL(String databaseURL) {
		this.databaseURL = databaseURL;
	}


	public String getDatabaseUser() {
		return databaseUser;
	}


	public void setDatabaseUser(String databaseUser) {
		this.databaseUser = databaseUser;
	}


	public String getDatabasePassword() {
		return databasePassword;
	}


	public void setDatabasePassword(String databasePassword) {
		this.databasePassword = databasePassword;
	}
	
	
}
